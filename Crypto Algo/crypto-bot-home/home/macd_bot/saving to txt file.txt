The most common approach to redirect standard output to a file is using shell redirection. The advantage of this approach is that it does not require any code changes. Here’s how you can redirect the stdout and stderr output to a file using the > operator:

1
2
$ python main.py > file.

Another simple solution to redirect the standard output to a file is to set sys.stdout to the file object, as shown below:

1
2
3
4
5
6
import sys
 
path = 'path/to/some/dir/file.txt'
sys.stdout = open(path, 'w')
print('Hello, World')
 
Another option is using contextlib.redirect_stdout() function in Python 3.4 which sets up a context manager for redirecting sys.stdout to another file. Here’s a working example:

1
2
3
4
5
6
7
import contextlib
 
path = 'path/to/some/dir/file.txt'
with open(path, 'w') as f:
    with contextlib.redirect_stdout(f):
        print('Hello, World')
	